
# ‚ú® Apresenta√ß√£o do Projeto: Gera√ß√£o Caseira de Cat√°logo de Produtos com Python e Notion

## üö´ Problema
O processo de cria√ß√£o de pedidos ou cat√°logos de produtos para envio via WhatsApp √© hoje manual, moroso e propenso a erros. Apps comerciais com essa fun√ß√£o t√™m planos pagos, dependem de conectividade constante com servidores e geralmente n√£o s√£o adapt√°veis a fluxos simples, caseiros ou offline.

## üí° Solu√ß√£o Proposta (Caseira, sem custos)
Criar um script Python que:

1. Consulta um banco de dados no Notion (com produtos ativos)
2. Preenche um template HTML com nome, imagem e pre√ßo dos produtos
3. Usa a biblioteca **WeasyPrint** para gerar um PDF localmente
4. Salva o PDF pronto para ser enviado manualmente via WhatsApp

Essa solu√ß√£o √© simples, gratuita e funciona 100% offline ap√≥s configurada. √â ideal para quem deseja uma ferramenta interna, sem pagar por automa√ß√µes em n8n Cloud ou por uso de APIs externas como PDFMonkey.

## üìÇ Tecnologias Utilizadas
- Python 3.10+
- [notion-client](https://github.com/ramnes/notion-sdk-py) para acessar a base de produtos
- [jinja2](https://jinja.palletsprojects.com) para preencher o template HTML
- [WeasyPrint](https://weasyprint.org) para gerar o PDF final
- `.env` para manter as credenciais seguras

---

# Requisitos do Projeto: Gera√ß√£o de Cat√°logo de Produtos em PDF via Notion + n8n

## üìÜ Contexto
O objetivo √© permitir a gera√ß√£o de um PDF de cat√°logo com produtos selecionados diretamente da base de dados do Notion, para ser enviado facilmente via WhatsApp. O projeto deve permitir tanto a cria√ß√£o de pedidos quanto cat√°logos promocionais.

---

## üìë Requisitos Funcionais

### 1. Banco de Dados
- A fonte de dados ser√° uma **tabela no Notion**, com os seguintes campos:
  - `Nome` (texto)
  - `Pre√ßo` (n√∫mero)
  - `Imagem` (arquivos ou URL)
  - `SKU` (c√≥digo interno)
  - `Barcode` (c√≥digo de barras, texto)
  - `Cat√°logo Ativo` (checkbox)

### 2. Gera√ß√£o de Cat√°logo (Caso 2)
- Quando um Webhook for acionado no n8n, o sistema:
  - Consulta os produtos com `Cat√°logo Ativo == true`
  - Monta um JSON com os dados dos produtos (nome, pre√ßo, imagem)
  - Envia esse JSON para o PDFMonkey para gerar o cat√°logo
  - Retorna a URL do PDF gerado
  - (Opcional) Envia o PDF automaticamente para um n√∫mero via WhatsApp Cloud API

### 3. Template PDFMonkey
- O template no PDFMonkey ser√° desenvolvido em **HTML/CSS com Liquid**
- O layout do cat√°logo incluir√°:
  - Nome do produto
  - Pre√ßo unit√°rio
  - Imagem (responsiva)
  - Disposi√ß√£o em grade (2 produtos por linha)

### 4. Integra√ß√£o com WhatsApp (futuro)
- Integra√ß√£o via **WhatsApp Business Cloud API**
  - Envio autom√°tico do PDF para cliente ou grupo
  - Uso de template aprovado pela Meta para envio de documentos (PDF)

---

## üìä Requisitos N√£o-Funcionais

- A solu√ß√£o n√£o requer backend pr√≥prio
- Toda a l√≥gica ser√° centralizada no n8n ou script Python
- O Notion ser√° a fonte principal e edit√°vel do cat√°logo
- O PDFMonkey (ou WeasyPrint) ser√° usado para renderizar documentos com visual profissional
- O sistema deve ser modular e permitir expans√£o para outros fluxos (como pedido personalizado)

---

## üöÄ Roadmap Futuro

1. Criar fluxo para montagem de **pedidos personalizados** com sele√ß√£o de produtos e quantidade
2. Adicionar suporte a leitura por c√≥digo de barras (escaneamento)
3. Adicionar reconhecimento por imagem (Google Vision)
4. Gerar relat√≥rios de vendas e popularidade
5. Dashboard de controle dos pedidos gerados

---

## üìÖ Tarefas Pr√≥ximas

- [x] Definir campos obrigat√≥rios no Notion
- [x] Criar o webhook no n8n
- [x] Montar fun√ß√£o que prepara JSON para PDFMonkey
- [x] Criar template de cat√°logo em HTML/CSS
- [ ] Testar envio real com produtos da base
- [ ] Automatizar envio via WhatsApp
